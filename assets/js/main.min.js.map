{"version":3,"sources":["main.js"],"names":["document","addEventListener","currentInputs","burger","body","fixOwlPadding","value","owlStage","querySelector","style","left","concat","setGapFromHeader","headerHeight","firstSection","header","phoneMenu","offsetHeight","paddingTop","setParallax","img","scrolledPx","window","scrollY","infoBlock","transform","innerWidth","sliderBlock","sliderBlockOffset","activateScrollLinks","links","querySelectorAll","forEach","link","e","preventDefault","classList","remove","pxFromTop","getAttribute","getBoundingClientRect","top","pxToScroll","scrollTo","behavior","slider","$","owlCarousel","dots","onChanged","property","stagePadding","onInitialized","relatedTarget","settings","responsive","items","margin","countPxScrolled","on","deltaX","originalEvent","trigger","activateSlider","checkbox","fakeCheckbox","parentNode","toggle","add","input","Cleave","phone","phoneRegionCode","WOW","init","tarifs","tarif","btn","contains","innerText","optionBtns","chooseInputs","inlineSVG","svgSelector","initClass"],"mappings":"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","file":"main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n  const fixOwlPadding = (value) => {\r\n    const owlStage = document.querySelector('.tarifs__slider .owl-stage')\r\n    if (owlStage) {\r\n      owlStage.style.left = `-${value}px`\r\n    }\r\n  }\r\n  const activateSlider = () => {\r\n    const slider = $('.owl-carousel')\r\n    if (slider) {\r\n      slider.owlCarousel({\r\n        dots: false,\r\n        onChanged: (e) => {\r\n          if (window.innerWidth < 1200) {\r\n            const value = e.property.value.stagePadding\r\n            fixOwlPadding(value)\r\n          }\r\n        },\r\n        onInitialized: (e) => {\r\n          if (window.innerWidth < 1200) {\r\n            const value = e.relatedTarget.settings.stagePadding\r\n            fixOwlPadding(value)\r\n          }\r\n        },\r\n        responsive: {\r\n          0: {\r\n            items: 1,\r\n            margin: 10,\r\n            stagePadding: 40,\r\n          },\r\n          420: {\r\n            items: 1,\r\n            margin: 14,\r\n            stagePadding: 60,\r\n          },\r\n          500: {\r\n            items: 1,\r\n            margin: 28,\r\n            stagePadding: 80,\r\n          },\r\n          700: {\r\n            items: 2,\r\n            margin: 28,\r\n            stagePadding: 40,\r\n          },\r\n          1200: {\r\n            items: 2,\r\n            margin: 28,\r\n          },\r\n        },\r\n      })\r\n      let countPxScrolled = 0\r\n      slider.on('mousewheel', function (e) {\r\n        const deltaX = e.originalEvent.deltaX\r\n        countPxScrolled += deltaX\r\n        if (countPxScrolled > 50) {\r\n          slider.trigger('next.owl')\r\n          countPxScrolled = 0\r\n        } else if (countPxScrolled < -50) {\r\n          slider.trigger('prev.owl')\r\n          countPxScrolled = 0\r\n        }\r\n        if (deltaX !== 0) {\r\n          e.preventDefault()\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const setGapFromHeader = () => {\r\n    const firstSection = document.querySelector('main > section:first-of-type')\r\n    const header = document.querySelector('.header')\r\n    const phoneMenu = document.querySelector('.phone-nav')\r\n    let headerHeight\r\n    if (header) {\r\n      headerHeight = header.offsetHeight\r\n    }\r\n    if (firstSection) {\r\n      firstSection.style.paddingTop = `${headerHeight}px`\r\n    }\r\n    if (phoneMenu && header) {\r\n      phoneMenu.style.paddingTop = `${headerHeight + 50}px`\r\n    }\r\n  }\r\n\r\n  const setParallax = () => {\r\n    const img = document.querySelector('.economy__big-img')\r\n    const scrolledPx = window.scrollY\r\n    const infoBlock = document.querySelector('.economy__info')\r\n    if (img && infoBlock) {\r\n      img.style.transform = `translateY(${scrolledPx / 4}px)`\r\n      infoBlock.style.transform = `translateY(-${scrolledPx / 7}px)`\r\n    }\r\n\r\n    if (window.innerWidth > 1100) {\r\n      const sliderBlock = document.querySelector('.tarifs__slider')\r\n      const sliderBlockOffset = scrolledPx - 300\r\n      let ratio = 2\r\n      if (sliderBlock) {\r\n        sliderBlock.style.transform = `translateX(${sliderBlockOffset < 0 ? sliderBlockOffset / ratio : 0}px)`\r\n      }\r\n    }\r\n  }\r\n\r\n  const wowInit = () => {\r\n    new WOW().init()\r\n  }\r\n\r\n  const activateCheckboxes = () => {\r\n    const checkboxes = document.querySelectorAll('.checkbox')\r\n    checkboxes.forEach((checkbox) => {\r\n      checkbox.addEventListener('click', () => {\r\n        const fakeCheckbox = checkbox.parentNode.querySelector('.fake-checkbox')\r\n        fakeCheckbox.classList.toggle('_active')\r\n        fakeCheckbox.classList.remove('_focused')\r\n      })\r\n\r\n      checkbox.addEventListener('focus', () => {\r\n        const fakeCheckbox = checkbox.parentNode.querySelector('.fake-checkbox')\r\n        fakeCheckbox.classList.add('_focused')\r\n      })\r\n\r\n      checkbox.addEventListener('blur', () => {\r\n        const fakeCheckbox = checkbox.parentNode.querySelector('.fake-checkbox')\r\n        fakeCheckbox.classList.remove('_focused')\r\n      })\r\n    })\r\n  }\r\n\r\n  const chooseInputs = () => {\r\n    const tarifs = document.querySelectorAll('.tarifs__card')\r\n    if (tarifs) {\r\n      tarifs.forEach((tarif) => {\r\n        const btn = tarif.querySelector('.card__btn')\r\n        btn.addEventListener('click', () => {\r\n          if (tarif.classList.contains('_added')) {\r\n            tarif.classList.remove('_added')\r\n            btn.innerText = 'Выбрать тариф'\r\n          } else {\r\n            tarif.classList.add('_added')\r\n            btn.innerText = 'Тариф выбран'\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    const optionBtns = document.querySelectorAll('.connect__item-btn')\r\n    if (optionBtns) {\r\n      optionBtns.forEach((btn) => {\r\n        btn.addEventListener('click', () => {\r\n          btn.classList.toggle('_checked')\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const closeMenu = () => {\r\n    const body = document.querySelector('body')\r\n    body.classList.remove('_menu-opened')\r\n  }\r\n\r\n  const activateScrollLinks = () => {\r\n    const links = document.querySelectorAll('[data-scroll-link]')\r\n    if (links) {\r\n      links.forEach((link) => {\r\n        link.addEventListener('click', (e) => {\r\n          e.preventDefault()\r\n          closeMenu()\r\n          const scrollTo = document.querySelector(link.getAttribute('href'))\r\n          const pxFromTop = scrollTo.getBoundingClientRect().top\r\n          const pxScrolled = window.scrollY\r\n          const headerHeight = document.querySelector('.header').offsetHeight\r\n          const pxToScroll = pxScrolled + pxFromTop - headerHeight\r\n          window.scrollTo({\r\n            behavior: 'smooth',\r\n            top: pxToScroll,\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const activateMaskInput = () => {\r\n    const currentInputs = document.querySelectorAll('[data-phone-mask]')\r\n    if (currentInputs) {\r\n      currentInputs.forEach((input) => {\r\n        var cleave = new Cleave(input, {\r\n          phone: true,\r\n          phoneRegionCode: 'RU',\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  const createInlineSvgs = () => {\r\n    inlineSVG.init({\r\n      svgSelector: 'img.svg',\r\n      initClass: 'js-inlinesvg',\r\n    })\r\n  }\r\n\r\n  const activateBurgerMenu = () => {\r\n    const burger = document.querySelector('.burger')\r\n    const body = document.querySelector('body')\r\n    if (burger) {\r\n      burger.addEventListener('click', () => {\r\n        body.classList.toggle('_menu-opened')\r\n      })\r\n    }\r\n  }\r\n\r\n  const init = () => {\r\n    activateSlider()\r\n    activateCheckboxes()\r\n    activateScrollLinks()\r\n    activateMaskInput()\r\n    activateBurgerMenu()\r\n    setGapFromHeader()\r\n    setParallax()\r\n    wowInit()\r\n    chooseInputs()\r\n    createInlineSvgs()\r\n  }\r\n\r\n  window.addEventListener('resize', () => {\r\n    setGapFromHeader()\r\n  })\r\n\r\n  window.addEventListener('scroll', () => {\r\n    setParallax()\r\n  })\r\n\r\n  init()\r\n})\r\n"]}